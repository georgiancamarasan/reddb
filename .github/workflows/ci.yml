name: build 

on: [push, pull_request]

jobs:
  cargo-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy

  build:
    name: Build
    needs: [cargo-cache]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [stable, beta, nightly, tls, no-default-features, compression]
        include:
          - build: beta
            rust: beta
          - build: nightly
            rust: nightly
            benches: true
          - build: tls
            features: "--features tls"
          - build: uds
            features: "--features tokio/uds"
          - build: no-default-features
            features: "--no-default-features"
          - build: compression
            features: "--features compression"
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust || 'stable' }}
          profile: minimal
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }}
      - name: Test all benches
        if: matrix.benches
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches ${{ matrix.features }}

  doc:
    name: Build docs
    needs: [cargo-cache, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: rustdoc
          args: -- -D broken_intra_doc_links

          